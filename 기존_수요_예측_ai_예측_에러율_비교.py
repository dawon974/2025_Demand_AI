# -*- coding: utf-8 -*-
"""기존 수요 예측_AI 예측_에러율 비교.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w1WyUTkrFnwCYBwQZpew2hptNBgaPmXt
"""

import pandas as pd
import matplotlib.pyplot as plt

# 1. 데이터 로딩 및 전처리
from google.colab import drive
drive.mount('/content/drive')

df = pd.read_excel("/content/drive/MyDrive/파주지사_A.I예측추가(2022~2025).xlsx")

# 2. 열수요실적이 0이 아닌 행만 사용
df = df[df['열수요실적'] != 0].copy()

# 3. 오차율 계산
df['오차율_열수요예측'] = ((df['열수요예측'] - df['열수요실적']).abs() / df['열수요실적']) * 100
df['오차율_AI'] = ((df['A.I'] - df['열수요실적']).abs() / df['열수요실적']) * 100

# 4. 일자 형식 정리
df['일자'] = pd.to_datetime(df['일자'])

# 5. 일자별 평균 오차율 계산
daily_error = df.groupby('일자')[['오차율_열수요예측', '오차율_AI']].mean()

# 6. 시각화
plt.figure(figsize=(14, 6))
plt.plot(daily_error.index, daily_error['오차율_열수요예측'], label='Thermal demand forecast error rate')
plt.plot(daily_error.index, daily_error['오차율_AI'], label='AI forecast error rate')
plt.title('Average error rate by date (%)')
plt.xlabel('date')
plt.ylabel('Error rate (%)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# 7. 평균 오차율 출력
print("열수요예측 평균 오차율: {:.2f}%".format(df['오차율_열수요예측'].mean()))
print("AI 예측 평균 오차율: {:.2f}%".format(df['오차율_AI'].mean()))

"""📊 그래프 해석  
X축 (date): 일자별 데이터 (2022년 ~ 2025년)

Y축 (Error rate %): 해당 일자의 평균 오차율

파란선: 기존 열수요예측(Thermal demand forecast)의 오차율

주황선: AI 예측(AI forecast)의 오차율

✔️2022년 중반

기존 열수요 예측 오차율이 매우 높게 나타나며 400%를 넘는 이상치가 있습니다.

AI 예측은 같은 구간에서 훨씬 낮은 오차율을 보입니다.

✔️2023년 ~ 2024년 중반

전체적으로 기존 예측과 AI 예측 모두 오차율이 낮아졌다가,

간헐적으로 AI 오차율이 높아지는 날도 있고, 기존 방식이 더 나은 구간도 존재합니다.

✔️2024년 말 ~ 2025년

비교적 두 예측 모델 모두 안정적이며 유사한 오차율 패턴을 보입니다.

이 시점부터는 둘 다 유사하게 움직이되, AI 오차율이 약간 높은 날이 더 많아 보입니다.

📉 평균 오차율 (그래프 아래 텍스트 출력 기준)
기존 열수요 예측 평균 오차율: 43.00%

AI 예측 평균 오차율: 43.49%

➡ AI 모델이 약간 더 높은 오차율을 보였지만, 두 모델의 평균 오차율 차이는 0.49%로 거의 동일합니다.
"""